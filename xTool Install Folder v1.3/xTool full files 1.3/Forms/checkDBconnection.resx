<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fimi0/kf9VHTr6NsU9kAAAAASUVORK5CYII=
</value>
  </data>
</root>